{"version":3,"sources":["redux/constants/actionTypes.js","redux/actions/actions-get-dropdownList.js","components/commonDropDown.js","components/countriesAndRegionDropdown.js","mock/AppMock.js","components/App.js","redux/reducers/countryRegionReducer.js","redux/reducers/rootReducer.js","store/store.js","index.js"],"names":["action_Types","SET_DROPDOWN_VALUES","SET_DROPDOWN_VALUES_ERROR","getData","result","type","payload","getCountries","name","dispatch","a","axios","get","then","res","console","log","data","CommonDropDown","e","preventDefault","this","props","handleOnChange","target","value","dropdownList","id","onChange","handleDropdownChange","class","map","x","Component","CountriesAndRegionDropdown","setCountries","Content","regions","React","connect","state","event","error","Data","heading","App","className","defaultProps","INITIAL_STATE","countryRegionReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAIeA,EAJM,CACjBC,oBAAqB,sBACrBC,0BAA2B,6BCcrBC,EAAU,SAACC,GACjB,MAAO,CACHC,KAAML,EAAaC,oBACnBK,QAASF,IAQFG,EAxBM,SAACC,GAAD,8CAAU,WAAOC,GAAP,SAAAC,EAAA,sEAErBC,IACDC,IAAI,2CAA6CJ,GACjDK,MAAK,SAACC,GACHC,QAAQC,IAAI,UAAWF,GAEvBL,EAASN,EAAQW,EAAIG,UAPF,2CAAV,uD,OC8BNC,E,0KA7BV,SAAqBC,GACrBA,EAAEC,iBAECC,KAAKC,MAAMC,eAAeJ,EAAEK,OAAOC,S,oBAGvC,WAAU,IAAD,OACCC,EAAgBL,KAAKC,MAAMI,aAEjC,OACI,gCAAK,uBACD,yBAAQlB,KAAK,WAAWiB,MAAQJ,KAAKC,MAAMG,MAAOE,GAAIN,KAAKC,MAAMK,GAAIC,SAAU,SAACT,GAAD,OAAO,EAAKU,qBAAqBV,IAAhH,UACA,mBAAGW,MAAM,qBAEDJ,EAAaK,KAAI,SAAAC,GAEtB,OAAM,iCAASA,EAAExB,oB,GAjBPyB,aCGvBC,E,uKAEJ,WACEb,KAAKc,aAAad,KAAKC,MAAMc,QAAQC,QAAQ,GAAG7B,Q,0BAElD,SAAaA,GACXa,KAAKC,MAAMf,aAAaC,K,oBAE1B,WAAU,IAAD,OACP,OACI,8BAAM,qBAAKsB,MAAO,QAAZ,SACL,oBAAGA,MAAM,mBAAT,UACC,cAAC,EAAD,CAAgBP,eAAgB,SAACf,GAAD,OAAU,EAAK2B,aAAa3B,IAAOkB,aAAcL,KAAKC,MAAMc,QAAQC,UAEpG,cAAC,EAAD,CAAgBX,aAAcL,KAAKC,MAAMlB,oB,GAdVkC,IAAML,WA8BhCM,eATS,SAACC,GACvB,MAAO,CACLpC,OAAQoC,EAAMC,MAAMrC,OACpBsC,MAAOF,EAAMC,MAAMC,UAGK,SAACjC,GAAD,MAAe,CACzCF,aAAc,SAACC,GAAD,OAAUC,EAASF,EAAaC,QAEjC+B,CAA8CL,GCb9CS,EAtBF,CACTC,QAAS,qCACTP,QAAQ,CACJ,CACIV,GAAG,SACHnB,KAAK,UAET,CACImB,GAAG,WACHnB,KAAK,YAET,CACImB,GAAG,OACHnB,KAAK,QAET,CACImB,GAAG,SACHnB,KAAK,YCbXqC,G,kKACJ,WACE,OACE,qBAAKC,UAAU,UAAf,SAAyB,mCACvB,6BAAKzB,KAAKC,MAAMc,QAAQQ,UACpB,cAAC,EAAD,CAA4BR,QAASf,KAAKC,MAAMc,mB,GAL1CH,cAUlBY,EAAIE,aAAe,CAAEX,QAASO,GACfE,Q,cCfTG,EAAgB,CACpB5C,OAAQ,IAqBK6C,EAlBc,WAA+C,IAA9CT,EAA6C,uDAArCQ,EAAqC,yCAApB3C,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC3D,OAAQD,GACN,KAAKL,EAAaC,oBAChB,OAAO,2BACFuC,GADL,IAEEpC,OAAQE,IAEZ,KAAKN,EAAaE,0BAChB,OAAO,2BACFsC,GADL,IAECE,MAAQ,CAACtC,QAAQ,KAGpB,QACE,OAAOoC,ICfEU,cAAgB,CAE3BT,MAAOQ,I,QCDLE,EAAmBC,OAAOC,sCAAwCC,IAKzDC,EAHDC,YAAYC,EAHJ,GAGgCN,EAAiBO,YAAgBC,OCDvFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGFQ,SAASC,eAAe,W","file":"static/js/main.258c5e5f.chunk.js","sourcesContent":["const action_Types = {\n    SET_DROPDOWN_VALUES: 'SET_DROPDOWN_VALUES',\n    SET_DROPDOWN_VALUES_ERROR: 'SET_DROPDOWN_VALUES_ERROR'\n}\nexport default action_Types;","import axios from \"axios\";\nimport action_Types from  '../constants/actionTypes';\n\nconst getCountries = (name) => async (dispatch) => {\n    \n    await axios\n        .get('https://restcountries.eu/rest/v2/region/' + name )\n        .then((res) => {\n            console.log(\"success\", res);\n           \n            dispatch(getData(res.data));\n        })\n         \n}\n\n\n    const getData = (result) => {\n    return {\n        type: action_Types.SET_DROPDOWN_VALUES,\n        payload: result,\n    };\n};\n\n \n     \n \n\nexport default getCountries;","import React, { Component } from \"react\";\n\n\nclass CommonDropDown extends Component {\n     handleDropdownChange(e) {\n     e.preventDefault();\n       \n        this.props.handleOnChange(e.target.value);\n    \n    }\n    render() {\n        const dropdownList  = this.props.dropdownList\n        \n        return (\n            <div><br/> \n                <select name=\"category\" value ={this.props.value} id={this.props.id} onChange={(e) => this.handleDropdownChange(e)} >\n                <i class=\"fa fa-caret-down\"></i>\n                    {\n                        dropdownList.map(x => {\n                            \n                   return<option>{x.name}</option>\n                        })       \n\n                    }\n                   \n                </select>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CommonDropDown;\n","  \nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport getCountries from '../redux/actions/actions-get-dropdownList';\nimport CommonDropDown from './commonDropDown';\n\nclass CountriesAndRegionDropdown extends React.Component {\n \n  componentDidMount() {\n    this.setCountries(this.props.Content.regions[0].name);\n  }\n  setCountries(name) {\n    this.props.getCountries(name);\n  }\n  render() {\n    return (\n        <div ><div class =\"click\"> \n         <i class=\"fa fa-caret-down\">\n          <CommonDropDown handleOnChange={(name) => this.setCountries(name)} dropdownList={this.props.Content.regions} />\n           \n          <CommonDropDown dropdownList={this.props.result} />\n          </i>\n          </div>\n        </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    result: state.event.result,\n    error: state.event.error,\n  };\n};\nconst mapsDispatchToProps = (dispatch) => ({\n  getCountries: (name) => dispatch(getCountries(name))\n});\nexport default connect(mapStateToProps, mapsDispatchToProps)(CountriesAndRegionDropdown);","  \nconst Data = {\n    heading: \"Dynamic Dropdown Using React-redux\",\n    regions:[\n        {\n            id:\"africa\",\n            name:\"Africa\"\n        },\n        {\n            id:\"americas\",\n            name:\"Americas\"\n        },\n        {\n            id:\"asia\",\n            name:\"Asia\"\n        },\n        {\n            id:\"europe\",\n            name:\"Europe\"\n        }\n    ],\n    \n}\nexport default Data;","import React, { Component } from 'react';\nimport CountriesAndRegionDropdown from './countriesAndRegionDropdown';\nimport Data from '../mock/AppMock';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app_div\"><center>\n        <h1>{this.props.Content.heading}</h1>\n            <CountriesAndRegionDropdown Content={this.props.Content}/></center>\n      </div>\n    );\n  }\n}\nApp.defaultProps = { Content: Data }\nexport default App;","import action_Types from '../constants/actionTypes';\nconst INITIAL_STATE = {\n  result: [],\n  // error : false\n}\nconst countryRegionReducer = (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case action_Types.SET_DROPDOWN_VALUES:\n      return {\n        ...state,\n        result: payload,\n      };\n    case action_Types.SET_DROPDOWN_VALUES_ERROR:\n      return {\n        ...state,\n       error : {result: false}\n       \n      };\n    default:\n      return state;\n  }\n};\n\nexport default countryRegionReducer;","import { combineReducers } from 'redux'; \n\nimport countryRegionReducer from './countryRegionReducer' ;\n\nexport default combineReducers({ \n\n    event: countryRegionReducer \n\n}) ","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../redux/reducers/rootReducer\";\nimport thunk from 'redux-thunk';\n\nconst INITIAL_STATE = {};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, INITIAL_STATE, composeEnhancers(applyMiddleware(thunk)));\n    \n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from '../src/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}